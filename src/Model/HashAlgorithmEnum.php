<?php
/**
 * NIS2 API
 *
 * This document defines all the nis2 api routes and behaviour
 *
 * OpenAPI spec version: 1.0.0
 * Contact: greg@evias.be
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 * 
 */

namespace Proximax\Model;
use Proximax\Core\KeccakHasher;
use Proximax\Utils\Hex;
/**
 * HashAlgorithmEnum class Doc Comment
 *
 * @category class
 * @package  Proximax
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class HashAlgorithmEnum
{    
    /**
     *  hashed using SHA3-256
     *  (Network Native)
     */
    const SHA3_256 = 0;

    /**
     *  hashed using Keccak-256
     *  (ETH Compat)
     */
    const KECCAK_256 = 1;

    /**
     * hashed twice: first with SHA-256, then with RIPEMD-160, then add 12 bytes of 0s
     * (BTC Compat)
     */
    const HASH_160 = 2;

    /**
     * Hashed twice with SHA-256
     * (BTC Compat)
     */
    const HASH_256 = 3;

    public static function hash($data, $algos){
        switch ($algos){
            case self::SHA3_256:
                return hash("sha3-256",$data);
            case self::KECCAK_256:
                return KeccakHasher::hash(256,$data);
            case self::HASH_160:
                $first = hash("sha256",$data);
                $first_bytes = (new Hex)->DecodeString($first);
                $tmp = implode(array_map("chr", $first_bytes));
                return hash("ripemd160",$tmp) . "000000000000000000000000";
            case self::HASH_256:
                $first = hash("sha256",$data);
                $first_bytes = (new Hex)->DecodeString($first);
                $tmp = implode(array_map("chr", $first_bytes));
                return hash("sha256",$tmp);
        }
    }
}
