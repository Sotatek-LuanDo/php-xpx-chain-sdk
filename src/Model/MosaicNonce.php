<?php
/**
 * NIS2 API
 *
 * This document defines all the nis2 api routes and behaviour
 *
 * OpenAPI spec version: 1.0.0
 * Contact: greg@evias.be
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 * 
 */

namespace Proximax\Model;
use Proximax\Utils\Hex;

/**
 * MosaicNonce class Doc Comment
 *
 * @category class
 * @package  Proximax
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class MosaicNonce{

    const NONCE_BYTES = 4;

    /**
     * Mosaic nonce
     */
    private $nonce;//byte array

    public function __construct($nonce){
        if ($nonce === null){
            throw new \Exception("Nonce must not be null"); 
        }
        else if (count($nonce) != self::NONCE_BYTES){
            throw new \Exception("Nonce needs to have size " . self::NONCE_BYTES); 
        }
        $this->nonce = $nonce;
    }

    /**
    * Create a random MosaicNonce
    * 
    * NOTE this implementation does not use cryptographically secure random generator as it is not needed for nonce
    * uniqueness
    *
    * @return MosaicNonce nonce
    */
    public static function createRandom() {
        $bytes = random_bytes(self::NONCE_BYTES);
        $hex = bin2hex($bytes);
        $tmp = (new Hex)->DecodeString($hex);
        return new MosaicNonce($tmp);
    }
    
    public function getNonce(){
        return $this->nonce;
    }

    public function getNonceAsInt(){
        $hex = (new Hex)->EncodeToString($this->nonce);
        return hexdec($hex);
    }
}


